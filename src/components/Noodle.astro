---
import type { Noodle as NoodleType } from "./Noodles.astro";

const {
  id,
  name,
  img = "https://picsum.photos/400/200",
  // ahora ratings es array de objetos { noodle_id, rating, review }
  ratings = [],
  description = "",
} = Astro.props;

let ratingsMedia = 0;

if (Array.isArray(ratings) && ratings.length) {
  const total = ratings.reduce((sum, r) => sum + Number(r.rating), 0);
  ratingsMedia = Math.round(total / ratings.length);
}

const uniqueRatingName = `rating-${id}`;
---

<div
  class="bg-white shadow-lg rounded-xl p-6 w-full max-w-md flex flex-col items-center"
  transition:name={`card-${id}`}
>
  <img
    src={img.startsWith("data:") ? img : `data:image/webp;base64,${img}`}
    alt={name}
    class="rounded-lg w-full h-48 object-cover mb-4"
    transition:name={`image-${id}`}
  />

  <h1
    class="text-3xl font-bold text-gray-800 mb-2"
    transition:name={`name-${id}`}
  >
    {name}
  </h1>

  <div
    class="rating rating-lg rating-half mb-4"
    transition:name={`rater-${id}`}
  >
    {
      [...Array(10)].map((_, idx) => {
        const i = idx + 1;
        const halfClass = i % 2 === 1 ? "mask-half-1" : "mask-half-2";
        return (
          <input
            key={i}
            type="radio"
            name={uniqueRatingName}
            class={`mask mask-star-2 ${halfClass} bg-orange-500`}
            aria-label={`${(i * 0.5).toFixed(1)} estrellas`}
            checked={ratingsMedia === i}
            disabled
          />
        );
      })
    }
  </div>

  <p class="text-gray-600 mb-4" transition:name={`rate-text-${id}`}>
    Puntuación: {ratingsMedia}/10
  </p>

  <p class="text-gray-700 text-center">
    {description || "Sin descripción disponible para este noodle."}
  </p>
</div>
