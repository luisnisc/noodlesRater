---
import Layout from "../layouts/Layout.astro";
import Noodle from "../components/Noodle.astro";

// Removed static generation to enable dynamic SSR routing
export const prerender = false;
export const revalidate = 60;

const id = Number(Astro.params.noodle);

const res = await fetch(`http://127.0.0.1:8000/api/noodles/`, {
  cache: "no-cache",
});
if (!res.ok) throw new Error("Noodle no encontrado");
const data = await res.json();

const noodleData = data.find((noodle) => noodle.id === id);
---

<head>
  <meta charset="UTF-8" />
  <title>Noodle {id}</title>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
</head>
<Layout>
  <main
    class="md:min-h-screen bg-gradient-to-br from-blue-100 to-purple-100 flex flex-col items-center py-8 min-h-screen justify-center"
  >
    <a
      href="/raterPage"
      transition:name={`moreInfo-${id}`}
      class="md:absolute md:left-0 md:top-0 m-5"
    >
      <button class="btn btn-primary w-max mb-4">Volver Atrás</button>
    </a>
    <Noodle
      id={noodleData.id}
      name={noodleData.name}
      img={noodleData.img}
      ratings={noodleData.ratings}
      description={noodleData.description}
      server:defer
    />
    <div id="ratingList">
      <h2 class="text-2xl font-bold text-gray-800 mb-4">Lista de Reseñas</h2>
      <ul class="list-disc list-inside">
        {
          noodleData.ratings.map((rating, idx) => (
            <li key={idx} class="flex items-center gap-4 mb-4">
              <div
                class="rating rating-lg rating-half"
                transition:name={`rater-${id}-${idx}`}
              >
                {Array.from({ length: 10 }).map((_, i) => {
                  const half = i + 1;
                  const halfClass = half % 2 ? "mask-half-1" : "mask-half-2";
                  return (
                    <input
                      key={half}
                      type="radio"
                      name={`rating-${idx}`}
                      class={`mask mask-star-2 ${halfClass} bg-orange-500`}
                      aria-label={`${(half * 0.5).toFixed(1)} estrellas`}
                      checked={half === rating.rating}
                      disabled
                    />
                  );
                })}
              </div>
              <p class="text-gray-600">{rating.review ?? ""}</p>
            </li>
          ))
        }
      </ul>
    </div>
  </main>
</Layout>
